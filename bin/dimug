#!/usr/bin/env php
<?php
/**
 * Start a console.
 *
 * @author  Benjamin GeiÃŸler <benjamin.geissler@gmail.com>
 * @package diMuG\API
 * @licence GPL v3
 */
require_once __DIR__ . '/../../../autoload.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Translation\Translator;
use Symfony\Component\Translation\MessageSelector;
use Symfony\Component\Translation\Loader\YamlFileLoader;
use diMuG\API\Commands\ValidateCommand;
use diMuG\API\Commands\InstallCommand;

// create translation
$translation = new Translator('en_EN', new MessageSelector());
$translation->setFallbackLocales(array('en'));
$translation->addLoader('yaml', new YamlFileLoader());
$translation->addResource('yaml', __DIR__ . '/../locales/en.yml', 'en');
$translation->addResource('yaml', __DIR__ . '/../locales/de.yml', 'de');

// configure command
$validate = new ValidateCommand();
$validate
    ->setConfigDir(__DIR__ . '/../config')
    ->setTranslator($translation);

// install command
$install = new InstallCommand();
$install
    ->setTranslator($translation)
    ->setInstalls(
        array(
            array(
                'target' => __DIR__ . '/../../../../config',
                'source' => __DIR__ . '/../config',
                'files'  => array('configuration.yml', 'security.yml')
            ),
            array(
                'target' => __DIR__ . '/../../../../locales',
                'source' => __DIR__ . '/../locales',
                'files'  => array('en.yml', 'de.yml')
            ),
            array(
                'target' => __DIR__ . '/../../../../log'
            ),
            array(
                'target' => __DIR__ . '/../../../../tests',
                'source' => __DIR__ . '/../tests/skeleton',
                'files'  => array('FinderInterfaceTest.php', 'GlossaryInterfaceTest.php')
            ),
            array(
                'target' => __DIR__ . '/../../../../web',
                'source' => __DIR__ . '/../web',
                'files'  => array('api.php')
            )
        )
    );

$application = new Application();
$application->add($validate);
$application->add($install);
$application->run();